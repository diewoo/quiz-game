{"version":3,"sources":["components/Answer.jsx","components/Question.jsx","components/QuestionList.jsx","components/Quiz.jsx","components/Modal.jsx","helpers/tally.js","components/Result.jsx","helpers/shuflleQuestions.js","data/quiz-data.jsx","components/QuizApp.jsx","index.js"],"names":["Answer","answer","handleAnswerClick","handleEnterPress","className","tabIndex","onClick","onKeyDown","Question","question","answers","map","index","key","JSON","stringify","props","children","QuestionList","questions","toString","Quiz","step","totalQuestions","score","Modal","modal","state","praise","points","tally","arr","item","tries","reduce","acc","Results","userAnswers","restartQuiz","triesTotal","oneTry","twoTries","threeTries","fourTries","shuffleQuestions","sort","a","b","Math","random","QUESTION_DATA","correct","QuizApp","getInitialState","e","isCorrect","currentStep","target","nodeName","parentNode","style","pointerEvents","classList","add","setState","setTimeout","showModal","nextStep","keyCode","restOfQuestions","slice","updateScore","min","length","QUESTIONS","this","Result","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09a74f58.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Answer = ({ answer, handleAnswerClick, handleEnterPress }) => {\r\n  return (\r\n    <li\r\n      className=\"question-answer\"\r\n      tabIndex=\"0\"\r\n      onClick={handleAnswerClick}\r\n      onKeyDown={handleEnterPress}\r\n    >\r\n      {answer}\r\n    </li>\r\n  );\r\n}\r\n\r\nAnswer.propTypes = {\r\n  answer: PropTypes.element.isRequired,\r\n  handleAnswerClick: PropTypes.func.isRequired,\r\n  handleEnterPress: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Answer;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Answer from './Answer';\r\n\r\nconst Question = ({ question, answers, handleAnswerClick, handleEnterPress }) => {\r\n  return (\r\n    <li className=\"question\">\r\n      <h2 className=\"question-title\" tabIndex=\"0\">\r\n        {question}\r\n      </h2>\r\n      <ul className=\"question-answers\" tabIndex=\"-1\">\r\n        {answers.map((answer, index) => {\r\n          return (\r\n            <Answer\r\n              key={JSON.stringify(answer.props.children)}\r\n              answer={answer}\r\n              handleAnswerClick={handleAnswerClick(index)}\r\n              handleEnterPress={handleEnterPress(index)}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    </li>\r\n  );\r\n}\r\n\r\nQuestion.propTypes = {\r\n  question: PropTypes.element.isRequired,\r\n  answers: PropTypes.array.isRequired,\r\n  handleAnswerClick: PropTypes.func.isRequired,\r\n  handleEnterPress: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Question;","import React from 'react';\r\nimport Question from './Question';\r\n\r\nconst QuestionList = ({ questions, handleAnswerClick, handleEnterPress }) => {\r\n  return (\r\n    <ul className=\"question-list\">\r\n      {questions.map(question => {\r\n        return (\r\n          <Question\r\n            key={question.question.props.children.toString()}\r\n            question={question.question}\r\n            answers={question.answers}\r\n            handleAnswerClick={handleAnswerClick}\r\n            handleEnterPress={handleEnterPress}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\nexport default QuestionList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport QuestionList from './QuestionList';\r\n\r\nconst Quiz = ({ step, questions, totalQuestions, score, handleAnswerClick, handleEnterPress }) => {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <header>\r\n        <div className=\"question-count\">\r\n          <h2>Pregunta</h2>\r\n          <div className=\"question-number\">{step}</div>\r\n          <div className=\"description\">de <span>{totalQuestions}</span></div>\r\n        </div>\r\n        <h1>Security Trivia</h1>\r\n        <div className=\"score-container\">\r\n          <h2>Puntaje</h2>\r\n          <div className=\"score\">{score}</div>\r\n          <div className=\"description\">puntos</div>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"questions\">\r\n        <QuestionList\r\n          questions={questions}\r\n          handleAnswerClick={handleAnswerClick}\r\n          handleEnterPress={handleEnterPress}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nQuiz.propTypes = {\r\n  step: PropTypes.number.isRequired,\r\n  questions: PropTypes.array.isRequired,\r\n  totalQuestions: PropTypes.number.isRequired,\r\n  score: PropTypes.number.isRequired,\r\n  handleAnswerClick: PropTypes.func.isRequired,\r\n  handleEnterPress: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Quiz;","\r\nimport React from 'react';\r\n// eslint-disable-next-line\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Modal = ({ modal: { state, praise, points } }) => {\r\n  return (\r\n    <div className={'correct-modal' + (state === 'show' ? ' modal-enter' : '')}>\r\n      <div className=\"praise\">{praise}</div>\r\n      <div className=\"points\">{points}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default Modal;","const tally = arr => {\r\n    return arr.map(item => {\r\n      return item.tries;\r\n    }).reduce((acc, item) => {\r\n      acc[item] = (acc[item] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n  };\r\n  \r\n  export default tally;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport tally from '../helpers/tally';\r\n\r\nconst Results = ({ userAnswers, score, restartQuiz }) => {\r\n  const triesTotal = tally(userAnswers);\r\n  const oneTry = triesTotal[1] && <div><strong>{triesTotal[1]}</strong> en el primer intento.</div>;\r\n  const twoTries = triesTotal[2] && <div><strong>{triesTotal[2]}</strong> en el segundo intento.</div>;\r\n  const threeTries = triesTotal[3] && <div><strong>{triesTotal[3]}</strong>en el tercer intento.</div>;\r\n  const fourTries = triesTotal[4] && <div><strong>{triesTotal[4]}</strong> en el cuarto intento.</div>;\r\n  \r\n  return (\r\n    <div className=\"results-container\">\r\n      <h2>Resultados</h2>\r\n      <div>Tu respondiste...</div>\r\n      {oneTry}\r\n      {twoTries}\r\n      {threeTries}\r\n      {fourTries}\r\n      <div className=\"results-total\">Tu puntaje total es <strong>{score}</strong>.</div>\r\n      <a onClick={restartQuiz}>Volver a jugar</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nResults.propTypes = {\r\n  userAnswers: PropTypes.array.isRequired,\r\n  score: PropTypes.number.isRequired,\r\n  restartQuiz: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Results;","const shuffleQuestions = (arr) => {\r\n    return arr.sort((a,b) => Math.random() < .5 ? 1 : -1);\r\n  };\r\n  \r\n  export default shuffleQuestions;","import React from 'react';\r\n\r\nconst QUESTION_DATA = [\r\n  {\r\n    question: <span>¿Usas en tu contraseña palabras que aparecen en el diccionario?</span>,\r\n    answers: [\r\n      <span>Sí, porque son fáciles de recordar.</span>,\r\n      <span>Sí, pero en un idioma distinto al mío.</span>,\r\n      <span>Sí, pero escojo las palabras más difíciles.</span>,\r\n      <span>No.</span>\r\n    ],\r\n    correct: 3\r\n  },\r\n  {\r\n    question: <span>¿Por qué muchas personas escogen “qwerty” como clave de acceso?</span>,\r\n    answers: [\r\n      <span>Por ser una secuencia del teclado fácil de recordar.</span>,\r\n      <span>Por pensar que a nadie más se le ocurriría una idea tan original.</span>,\r\n      <span>Todas las anteriores. </span>,\r\n      <span>Por negligencia para crear una contraseña segura </span>\r\n    ],\r\n    correct: 2\r\n  },\r\n  {\r\n    question: <span>¿Cuál de estas es una contraseña segura?</span>,\r\n    answers: [\r\n      <span>123456789.</span>,\r\n      <span>Contraseña.</span>,\r\n      <span>MgelFdLdFee2015.</span>,\r\n      <span>Facebook123.</span>\r\n    ],\r\n    correct: 2\r\n  },\r\n  {\r\n    question: <span>¿Cuál es el mejor lugar para guardar tus contraseñas?</span>,\r\n    answers: [\r\n      <span>Una libreta de notas al lado del computador en la oficina.</span>,\r\n      <span>Un archivo de texto compartido solo con la familia.</span>,\r\n      <span>Apuntadas en papeles autoadhesivos cerca del teléfono</span>,\r\n      <span>Ninguna de las anteriores.</span>\r\n    ],\r\n    correct: 3\r\n  },\r\n  {\r\n    question: <span>¿Qué puedes hacer para proteger tus contraseñas?</span>,\r\n    answers: [\r\n      <span>Enviarlas por correo electrónico.</span>,\r\n      <span>Acceder a tus cuentas desde hoteles, bibliotecas o cibercafés.</span>,\r\n      <span>No mencionarlas en chats o redes sociales.</span>,\r\n      <span>Conservar las que vienen predeterminadas en las aplicaciones.</span>\r\n    ],\r\n    correct: 2\r\n  },\r\n  {\r\n    question: <span>La mejor clave secreta:</span>,\r\n    answers: [\r\n      <span>Tiene secuencias con más de 8 caracteres.</span>,\r\n      <span>Intercala símbolos entre las letras y los números.</span>,\r\n      <span>No usa ni letras ni números consecutivos.</span>,\r\n      <span>Todas las anteriores.</span>\r\n    ],\r\n    correct: 3\r\n  },\r\n  {\r\n    question: <span>Además de crear unas difíciles de adivinar ¿qué puedes hacer para proteger tus contraseñas?</span>,\r\n    answers: [\r\n      <span>Evitar el acceso a tus cuentas desde redes de conexión públicas.</span>,\r\n      <span>No descargar archivos de origen desconocido en tu computador.</span>,\r\n      <span>Cerrar siempre las sesiones (log out) de tus aplicaciones.</span>,\r\n      <span>Todas las anteriores.</span>\r\n    ],\r\n    correct: 3\r\n  },\r\n  {\r\n    question: <span>¿Qué debe reunir una contraseña segura?</span>,\r\n    answers: [\r\n      <span>Fecha de nacimiento, nombres de mascotas, película de moda.</span>,\r\n      <span>Número del documento de identidad con números de teléfono.</span>,\r\n      <span>Una combinación de mayúsculas, minúsculas, números y símbolos.</span>,\r\n      <span>Ninguna de las anteriores.</span>\r\n    ],\r\n    correct: 2\r\n  }\r\n];\r\n\r\nexport default QUESTION_DATA;","import React, { Fragment, Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Quiz from './Quiz';\r\nimport Modal from './Modal';\r\nimport Results from './Result';\r\nimport shuffleQuestions from '../helpers/shuflleQuestions';\r\nimport QUESTION_DATA from '../data/quiz-data';\r\n\r\nclass QuizApp extends Component {\r\n  state = {\r\n    ...this.getInitialState(this.props.totalQuestions)\r\n  };\r\n\r\n  static propTypes = {\r\n    totalQuestions: PropTypes.number.isRequired\r\n  };\r\n\r\n  getInitialState(totalQuestions) {\r\n    totalQuestions = Math.min(totalQuestions, QUESTION_DATA.length);\r\n    const QUESTIONS = shuffleQuestions(QUESTION_DATA).slice(0, totalQuestions);\r\n\r\n    return {\r\n      questions: QUESTIONS,\r\n      totalQuestions: totalQuestions,\r\n      userAnswers: QUESTIONS.map(() => {\r\n        return {\r\n          tries: 0\r\n        }\r\n      }),\r\n      step: 1,\r\n      score: 0,\r\n      modal: {\r\n        state: 'hide',\r\n        praise: '',\r\n        points: ''\r\n      }\r\n    };\r\n  }\r\n\r\n  handleAnswerClick = (index) => (e) => {\r\n    const { questions, step, userAnswers } = this.state;\r\n    const isCorrect = questions[0].correct === index;\r\n    const currentStep = step - 1;\r\n    const tries = userAnswers[currentStep].tries;\r\n\r\n    if (isCorrect && e.target.nodeName === 'LI') {\r\n      e.target.parentNode.style.pointerEvents = 'none';\r\n\r\n      e.target.classList.add('right');\r\n\r\n      userAnswers[currentStep] = {\r\n        tries: tries + 1\r\n      };\r\n\r\n      this.setState({\r\n        userAnswers: userAnswers\r\n      });\r\n\r\n      setTimeout(() => this.showModal(tries), 750);\r\n\r\n      setTimeout(this.nextStep, 2750);\r\n    }\r\n\r\n    else if (e.target.nodeName === 'LI') {\r\n      e.target.style.pointerEvents = 'none';\r\n      e.target.classList.add('wrong');\r\n\r\n      userAnswers[currentStep] = {\r\n        tries: tries + 1\r\n      };\r\n\r\n      this.setState({\r\n        userAnswers: userAnswers\r\n      });\r\n    }\r\n  };\r\n\r\n  handleEnterPress = (index) => (e) => {\r\n    if (e.keyCode === 13) {\r\n      this.handleAnswerClick(index)(e);\r\n    }\r\n  };\r\n\r\n  showModal = (tries) => {\r\n    let praise;\r\n    let points;\r\n\r\n    switch (tries) {\r\n      case 0: {\r\n        praise = 'primer intento!';\r\n        points = '+10';\r\n        break;\r\n      }\r\n      case 1: {\r\n        praise = 'segundo intento!';\r\n        points = '+5';\r\n        break;\r\n      }\r\n      case 2: {\r\n        praise = 'Correcto!';\r\n        points = '+2';\r\n        break;\r\n      }\r\n      default: {\r\n        praise = 'Correcto!';\r\n        points = '+1';\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      modal: {\r\n        state: 'show',\r\n        praise,\r\n        points\r\n      }\r\n    });\r\n  };\r\n\r\n  nextStep = () => {\r\n    const { questions, userAnswers, step, score } = this.state;\r\n    const restOfQuestions = questions.slice(1);\r\n    const currentStep = step - 1;\r\n    const tries = userAnswers[currentStep].tries;\r\n\r\n    this.setState({\r\n      step: step + 1,\r\n      score: this.updateScore(tries, score),\r\n      questions: restOfQuestions,\r\n      modal: {\r\n        state: 'hide'\r\n      }\r\n    });\r\n  };\r\n\r\n  updateScore(tries, score) {\r\n    switch (tries) {\r\n      case 1: return score + 10;\r\n      case 2: return score + 5;\r\n      case 3: return score + 2;\r\n      default: return score + 1;\r\n    }\r\n  }\r\n\r\n  restartQuiz = () => {\r\n    this.setState({\r\n      ...this.getInitialState(this.props.totalQuestions)\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { step, questions, userAnswers, totalQuestions, score, modal } = this.state;\r\n\r\n    if (step >= totalQuestions + 1) {\r\n      return (\r\n        <Results\r\n          score={score}\r\n          restartQuiz={this.restartQuiz}\r\n          userAnswers={userAnswers}\r\n        />\r\n      );\r\n    } else return (\r\n      <Fragment>\r\n        <Quiz\r\n          step={step}\r\n          questions={questions}\r\n          totalQuestions={totalQuestions}\r\n          score={score}\r\n          handleAnswerClick={this.handleAnswerClick}\r\n          handleEnterPress={this.handleEnterPress}\r\n        />\r\n        { modal.state === 'show' && <Modal modal={modal} /> }\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuizApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport QuizApp from './components/QuizApp';\n\nReactDOM.render(<QuizApp totalQuestions={5} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}